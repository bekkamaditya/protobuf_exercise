# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import movie_pb2 as movie__pb2


class MovieGuideStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UserAction = channel.unary_stream(
        '/MovieGuide/UserAction',
        request_serializer=movie__pb2.UserReq.SerializeToString,
        response_deserializer=movie__pb2.Response.FromString,
        )


class MovieGuideServicer(object):

  def UserAction(self, request, context):
    """rpc AddMovie( UserReq ) returns (Response){}
    rpc SearchMovie( UserReq ) returns (stream Response ){}
    rpc UpdateMovie( UserReq ) returns (Response) {}
    rpc DeleteMovie( UserReq ) returns (Response) {} 
    rpc ShowAllMovies( UserReq ) returns (stream Response) {}
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MovieGuideServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UserAction': grpc.unary_stream_rpc_method_handler(
          servicer.UserAction,
          request_deserializer=movie__pb2.UserReq.FromString,
          response_serializer=movie__pb2.Response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'MovieGuide', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
